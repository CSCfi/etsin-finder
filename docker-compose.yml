version: '3'
services:
    frontend:
      container_name: "webpack"
      # domainname: etsin-local.fd-test.csc.fi
      # hostname: www
      image: etsin-qvain-webpack
      build:
        context: ./etsin_finder/frontend
        dockerfile: etsin_finder/frontend/webpack.dockerfile
      command: npm start
      ports:
        - "8080:8080"
      expose:
        - "8080"
      volumes:
        - webpack_build_folder:/etsin_finder/frontend/build/
        - static_folder:/etsin_finder/frontend/static/
        - certificates_folder:/etc/nginx/ssl_certs/
      depends_on:
        - backend
      environment:
        - base_url=0.0.0.0:8080
    backend:
      container_name: "flask"
      image: etsin-qvain-flask
      command: gunicorn -b '0.0.0.0:5000' --bind unix:/usr/local/etsin/gunicorn/socket --config /etc/gunicorn.py etsin_finder.finder:app --preload
      build:
        context: ./
        dockerfile: flask.dockerfile
      ports:
        - "5000:5000"
      expose:
        - "5000"
      volumes:
        - webpack_build_folder:/etsin_finder/frontend/build/
        - static_folder:/etsin_finder/frontend/static/
        - certificates_folder:/etc/nginx/ssl_certs/
      environment:
        - base_url=0.0.0.0:5000
        - FLASK_ENV=development
        - PYTHONPATH=/
        - FLASK_DEBUG=1
    nginx:
      container_name: "nginx"
      image: etsin-qvain-nginx 
      build:
        context: ./nginx/
        dockerfile: nginx/nginx.dockerfile
      ports:
        - "80:80"
        - "443:443"
      expose:
        - "80"
        - "443"
      volumes:
        - webpack_build_folder:/etsin_finder/frontend/build/
        - static_folder:/etsin_finder/frontend/static/
        - certificates_folder:/etc/nginx/ssl_certs/
      depends_on:
      # Required, in order to do requests from nginx config files to backend:5000
      - backend
      # Required, in order to do requests from nginx config files to frontend:8080
      - frontend
volumes:
    webpack_build_folder:
      driver: local
    static_folder:
      driver: local
    certificates_folder:
      driver: local
