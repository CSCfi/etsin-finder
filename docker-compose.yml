version: '3'
services:
    frontend:
      container_name: "webpack"
      image: etsin-qvain-webpack
      build:
        context: ./etsin_finder/frontend
        dockerfile: etsin_finder/frontend/webpack.dockerfile
      command: npm start
      ports:
        - "8080:8080"
      expose:
        - "8080"
      volumes:
        - type: bind
          source: ./etsin_finder/frontend/
          target: /etsin_finder/frontend/
        - type: volume
          source: static_folder
          target: /etsin_finder/frontend/static/
        - type: volume
          source: certificates_folder
          target: /etc/nginx/ssl_certs/
      depends_on:
        - backend
      environment:
        - CHOKIDAR_USEPOLLING=true
        - base_url=0.0.0.0:8080
    backend:
      container_name: "flask"
      image: etsin-qvain-flask
      build:
        context: ./
        dockerfile: flask.dockerfile
      ports:
        - "5000:5000"
      expose:
        - "5000"
      volumes:
        - type: bind
          source: ./etsin_finder/frontend/build/
          target: /etsin_finder/frontend/build/
        - type: volume
          source: static_folder
          target: /etsin_finder/frontend/static/
        - type: volume
          source: certificates_folder
          target: /etc/nginx/ssl_certs/
      environment:
        - base_url=0.0.0.0:5000
        - FLASK_ENV=development
        - PYTHONPATH=/
        - FLASK_DEBUG=1
    nginx:
      container_name: "nginx"
      image: etsin-qvain-nginx
      build:
        context: ./nginx/
        dockerfile: nginx/nginx.dockerfile
      ports:
        - "80:80"
        - "443:443"
      expose:
        - "80"
        - "443"
      volumes:
        - type: bind
          source: ./etsin_finder/frontend/build/
          target: /etsin_finder/frontend/build/
        - type: volume
          source: static_folder
          target: /etsin_finder/frontend/static/
        - type: volume
          source: certificates_folder
          target: /etc/nginx/ssl_certs/
      environment:
      - CHOKIDAR_USEPOLLING=true
      depends_on:
      - frontend
      - backend
volumes:
    static_folder:
      driver: local
    certificates_folder:
      driver: local
